<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Minimal Product Catalog</title>

    <!-- React and Babel CDN -->
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

    <style>
      body {
        font-family: Arial, sans-serif;
        padding: 30px;
      }

      h2 {
        margin-bottom: 20px;
      }

      input,
      select {
        padding: 8px;
        margin-right: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
      }

      .grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 15px;
        margin-top: 20px;
      }

      .card {
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }

      .card h3 {
        margin: 0 0 10px 0;
      }

      .price {
        color: green;
        font-weight: bold;
      }

      p {
        margin: 5px 0;
      }
    </style>
  </head>

  <body>
    <div id="root"></div>

    <script type="text/babel">
      const { useState } = React;

      function App() {
        const [search, setSearch] = useState("");
        const [category, setCategory] = useState("All");

        const products = [
          { id: 1, title: "Notebook", category: "Stationery", price: 120 },
          { id: 2, title: "Mouse", category: "Electronics", price: 899 },
          { id: 3, title: "Mug", category: "Home", price: 299 },
          { id: 4, title: "Pen", category: "Stationery", price: 40 },
          { id: 5, title: "Headphones", category: "Electronics", price: 1299 },
          { id: 6, title: "Plate Set", category: "Home", price: 699 },
        ];

        const categories = ["All", "Stationery", "Electronics", "Home"];

        const filtered = products.filter(
          (p) =>
            (category === "All" || p.category === category) &&
            p.title.toLowerCase().includes(search.toLowerCase())
        );

        return (
          <div>
            <h2>Product Catalog</h2>

            <input
              type="text"
              placeholder="Search..."
              value={search}
              onChange={(e) => setSearch(e.target.value)}
            />

            <select
              value={category}
              onChange={(e) => setCategory(e.target.value)}
            >
              {categories.map((c) => (
                <option key={c}>{c}</option>
              ))}
            </select>

            <div className="grid">
              {filtered.length > 0 ? (
                filtered.map((p) => (
                  <div className="card" key={p.id}>
                    <h3>{p.title}</h3>
                    <p>{p.category}</p>
                    <p className="price">â‚¹{p.price}</p>
                  </div>
                ))
              ) : (
                <p>No results found.</p>
              )}
            </div>
          </div>
        );
      }

      ReactDOM.createRoot(document.getElementById("root")).render(<App />);
    </script>
  </body>
</html>
